name: Build Docker Image
on:
  push:
    branches:
      - main
      - develop
  workflow_dispatch:
jobs:
  docker-build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          role-to-assume: ${{ secrets.AWS_ROLE_NAME }}
          aws-region: ${{ secrets.AWS_REGION }}
      - name: Login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v2
      - name: Build Docker Image
        run: |
          docker build -t outta/website-cms .
          docker tag outta/website-cms $REGISTRY/$REGISTRY_ALIAS/$REPOSITORY:$IMAGE_TAG
          # docker tag outta/website-cms $REGISTRY/$REGISTRY_ALIAS/$REPOSITORY:latest
      - name: Tag Docker Image
        env:
          REGISTRY: ${{ steps.login-ecr.outputs.registry }}
          REGISTRY_ALIAS: ${{ vars.REGISTRY_ALIAS }}
          REPOSITORY: ${{ vars.REPOSITORY }}
          IMAGE_TAG: ${{ github.sha }}
        run: |
          docker tag outta/website-cms $REGISTRY/$REGISTRY_ALIAS/$REPOSITORY:$IMAGE_TAG
          # docker tag outta/website-cms $REGISTRY/$REGISTRY_ALIAS/$REPOSITORY:latest
      - name: Push Docker Image
        env:
          REGISTRY: ${{ steps.login-ecr.outputs.registry }}
          REGISTRY_ALIAS: ${{ vars.REGISTRY_ALIAS }}
          REPOSITORY: ${{ vars.REPOSITORY }}
          IMAGE_TAG: ${{ github.sha }}
        run: |
          docker push $REGISTRY/$REGISTRY_ALIAS/$REPOSITORY:$IMAGE_TAG
          # docker push $REGISTRY/$REGISTRY_ALIAS/$REPOSITORY:latest
